<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="28" passed="25" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-04T12:53:29 IST" name="Surefire suite" finished-at="2024-08-04T12:57:25 IST" duration-ms="235978">
    <groups>
    </groups>
    <test started-at="2024-08-04T12:53:29 IST" name="Surefire test" finished-at="2024-08-04T12:57:25 IST" duration-ms="235978">
      <class name="frames.FrameTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:frames.FrameTests@661972b0]" started-at="2024-08-04T12:56:00 IST" name="setup" finished-at="2024-08-04T12:56:05 IST" duration-ms="4427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:frames.FrameTests@661972b0]" started-at="2024-08-04T12:56:05 IST" name="goHome" finished-at="2024-08-04T12:56:05 IST" duration-ms="389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSwitchingToIFrame()[pri:0, instance:frames.FrameTests@661972b0]" started-at="2024-08-04T12:56:05 IST" name="testSwitchingToIFrame" finished-at="2024-08-04T12:56:08 IST" duration-ms="2575" status="FAIL">
          <exception class="org.openqa.selenium.InvalidElementStateException">
            <message>
              <![CDATA[invalid element state
  (Session info: chrome=127.0.6533.89)
Build info: version: '4.22.0', revision: 'c5f3146703*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c9b1a18898f96f1e1ce3a6dd4af43f24, clearElement {id=f.8EEA6A594760143F1E0CFEE1C479650B.d.E5C7F68BA0BD20DCDF88341451D1DA3D.e.28}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.89, chrome: {chromedriverVersion: 127.0.6533.88 (a2d0cb026721..., userDataDir: C:\Users\ashis\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55321}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55321/devtoo..., se:cdpVersion: 127.0.6533.89, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (c9b1a18898f96f1e1ce3a6dd4af43f24)] -> id: tinymce]
Session ID: c9b1a18898f96f1e1ce3a6dd4af43f24]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidElementStateException: invalid element state
  (Session info: chrome=127.0.6533.89)
Build info: version: '4.22.0', revision: 'c5f3146703*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c9b1a18898f96f1e1ce3a6dd4af43f24, clearElement {id=f.8EEA6A594760143F1E0CFEE1C479650B.d.E5C7F68BA0BD20DCDF88341451D1DA3D.e.28}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.89, chrome: {chromedriverVersion: 127.0.6533.88 (a2d0cb026721..., userDataDir: C:\Users\ashis\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55321}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55321/devtoo..., se:cdpVersion: 127.0.6533.89, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (c9b1a18898f96f1e1ce3a6dd4af43f24)] -> id: tinymce]
Session ID: c9b1a18898f96f1e1ce3a6dd4af43f24
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.clear(RemoteWebElement.java:129)
at pages.WysiwygEditorPage.clearTextArea(WysiwygEditorPage.java:24)
at frames.FrameTests.testSwitchingToIFrame(FrameTests.java:12)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidElementStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchingToIFrame -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:frames.FrameTests@661972b0]" started-at="2024-08-04T12:56:08 IST" name="recordFailure" finished-at="2024-08-04T12:56:08 IST" duration-ms="143" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSwitchingToIFrame status=FAILURE method=FrameTests.testSwitchingToIFrame()[pri:0, instance:frames.FrameTests@661972b0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:frames.FrameTests@661972b0]" started-at="2024-08-04T12:56:08 IST" name="tearDown" finished-at="2024-08-04T12:56:08 IST" duration-ms="199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- frames.FrameTests -->
      <class name="brokenImages.BrokenImagesTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:brokenImages.BrokenImagesTests@6aba2b86]" started-at="2024-08-04T12:55:04 IST" name="setup" finished-at="2024-08-04T12:55:09 IST" duration-ms="4401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:brokenImages.BrokenImagesTests@6aba2b86]" started-at="2024-08-04T12:55:09 IST" name="goHome" finished-at="2024-08-04T12:55:09 IST" duration-ms="334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testBrokenImagesPresent()[pri:0, instance:brokenImages.BrokenImagesTests@6aba2b86]" started-at="2024-08-04T12:55:09 IST" name="testBrokenImagesPresent" finished-at="2024-08-04T12:55:15 IST" duration-ms="5815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBrokenImagesPresent -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:brokenImages.BrokenImagesTests@6aba2b86]" started-at="2024-08-04T12:55:15 IST" name="recordFailure" finished-at="2024-08-04T12:55:15 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBrokenImagesPresent status=SUCCESS method=BrokenImagesTests.testBrokenImagesPresent()[pri:0, instance:brokenImages.BrokenImagesTests@6aba2b86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:brokenImages.BrokenImagesTests@6aba2b86]" started-at="2024-08-04T12:55:15 IST" name="tearDown" finished-at="2024-08-04T12:55:15 IST" duration-ms="233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- brokenImages.BrokenImagesTests -->
      <class name="frames.NestedFramesTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:frames.NestedFramesTests@5af3afd9]" started-at="2024-08-04T12:56:08 IST" name="setup" finished-at="2024-08-04T12:56:13 IST" duration-ms="4584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:frames.NestedFramesTests@5af3afd9]" started-at="2024-08-04T12:56:13 IST" name="goHome" finished-at="2024-08-04T12:56:13 IST" duration-ms="339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testNestedFrames()[pri:0, instance:frames.NestedFramesTests@5af3afd9]" started-at="2024-08-04T12:56:13 IST" name="testNestedFrames" finished-at="2024-08-04T12:56:15 IST" duration-ms="2111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedFrames -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:frames.NestedFramesTests@5af3afd9]" started-at="2024-08-04T12:56:15 IST" name="recordFailure" finished-at="2024-08-04T12:56:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNestedFrames status=SUCCESS method=NestedFramesTests.testNestedFrames()[pri:0, instance:frames.NestedFramesTests@5af3afd9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:frames.NestedFramesTests@5af3afd9]" started-at="2024-08-04T12:56:15 IST" name="tearDown" finished-at="2024-08-04T12:56:15 IST" duration-ms="175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- frames.NestedFramesTests -->
      <class name="dropdown.DropDownTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:dropdown.DropDownTests@7c729a55]" started-at="2024-08-04T12:55:46 IST" name="setup" finished-at="2024-08-04T12:55:50 IST" duration-ms="4432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:dropdown.DropDownTests@7c729a55]" started-at="2024-08-04T12:55:50 IST" name="goHome" finished-at="2024-08-04T12:55:51 IST" duration-ms="345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testMultipleSelectionFromDropDown()[pri:0, instance:dropdown.DropDownTests@7c729a55]" started-at="2024-08-04T12:55:51 IST" name="testMultipleSelectionFromDropDown" finished-at="2024-08-04T12:55:52 IST" duration-ms="832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleSelectionFromDropDown -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:dropdown.DropDownTests@7c729a55]" started-at="2024-08-04T12:55:52 IST" name="recordFailure" finished-at="2024-08-04T12:55:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMultipleSelectionFromDropDown status=SUCCESS method=DropDownTests.testMultipleSelectionFromDropDown()[pri:0, instance:dropdown.DropDownTests@7c729a55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:dropdown.DropDownTests@7c729a55]" started-at="2024-08-04T12:55:52 IST" name="goHome" finished-at="2024-08-04T12:55:53 IST" duration-ms="978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSelectOption()[pri:0, instance:dropdown.DropDownTests@7c729a55]" started-at="2024-08-04T12:55:53 IST" name="testSelectOption" finished-at="2024-08-04T12:55:53 IST" duration-ms="634" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectOption -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:dropdown.DropDownTests@7c729a55]" started-at="2024-08-04T12:55:53 IST" name="recordFailure" finished-at="2024-08-04T12:55:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSelectOption status=SUCCESS method=DropDownTests.testSelectOption()[pri:0, instance:dropdown.DropDownTests@7c729a55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:dropdown.DropDownTests@7c729a55]" started-at="2024-08-04T12:55:53 IST" name="tearDown" finished-at="2024-08-04T12:55:53 IST" duration-ms="212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- dropdown.DropDownTests -->
      <class name="DragAndDropElements.DragAndDropTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:DragAndDropElements.DragAndDropTests@47af7f3d]" started-at="2024-08-04T12:55:40 IST" name="setup" finished-at="2024-08-04T12:55:44 IST" duration-ms="4248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:DragAndDropElements.DragAndDropTests@47af7f3d]" started-at="2024-08-04T12:55:44 IST" name="goHome" finished-at="2024-08-04T12:55:45 IST" duration-ms="358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testDragAndDropOfElements()[pri:0, instance:DragAndDropElements.DragAndDropTests@47af7f3d]" started-at="2024-08-04T12:55:45 IST" name="testDragAndDropOfElements" finished-at="2024-08-04T12:55:46 IST" duration-ms="1156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDragAndDropOfElements -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:DragAndDropElements.DragAndDropTests@47af7f3d]" started-at="2024-08-04T12:55:46 IST" name="tearDown" finished-at="2024-08-04T12:55:46 IST" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:DragAndDropElements.DragAndDropTests@47af7f3d]" started-at="2024-08-04T12:55:46 IST" name="recordFailure" finished-at="2024-08-04T12:55:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDragAndDropOfElements status=SUCCESS method=DragAndDropTests.testDragAndDropOfElements()[pri:0, instance:DragAndDropElements.DragAndDropTests@47af7f3d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
      </class> <!-- DragAndDropElements.DragAndDropTests -->
      <class name="login.LoginTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:login.LoginTests@2e005c4b]" started-at="2024-08-04T12:56:36 IST" name="setup" finished-at="2024-08-04T12:56:40 IST" duration-ms="4350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:login.LoginTests@2e005c4b]" started-at="2024-08-04T12:56:40 IST" name="goHome" finished-at="2024-08-04T12:56:41 IST" duration-ms="348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSuccessfulLogin()[pri:0, instance:login.LoginTests@2e005c4b]" started-at="2024-08-04T12:56:41 IST" name="testSuccessfulLogin" finished-at="2024-08-04T12:56:43 IST" duration-ms="2024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulLogin -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:login.LoginTests@2e005c4b]" started-at="2024-08-04T12:56:43 IST" name="recordFailure" finished-at="2024-08-04T12:56:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSuccessfulLogin status=SUCCESS method=LoginTests.testSuccessfulLogin()[pri:0, instance:login.LoginTests@2e005c4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:login.LoginTests@2e005c4b]" started-at="2024-08-04T12:56:43 IST" name="tearDown" finished-at="2024-08-04T12:56:43 IST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- login.LoginTests -->
      <class name="slider.SliderTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:slider.SliderTests@6356695f]" started-at="2024-08-04T12:56:59 IST" name="setup" finished-at="2024-08-04T12:57:03 IST" duration-ms="4385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:slider.SliderTests@6356695f]" started-at="2024-08-04T12:57:03 IST" name="goHome" finished-at="2024-08-04T12:57:04 IST" duration-ms="369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="dragSliderToRight()[pri:0, instance:slider.SliderTests@6356695f]" started-at="2024-08-04T12:57:04 IST" name="dragSliderToRight" finished-at="2024-08-04T12:57:05 IST" duration-ms="1158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragSliderToRight -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:slider.SliderTests@6356695f]" started-at="2024-08-04T12:57:05 IST" name="recordFailure" finished-at="2024-08-04T12:57:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragSliderToRight status=SUCCESS method=SliderTests.dragSliderToRight()[pri:0, instance:slider.SliderTests@6356695f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:slider.SliderTests@6356695f]" started-at="2024-08-04T12:57:05 IST" name="tearDown" finished-at="2024-08-04T12:57:05 IST" duration-ms="187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- slider.SliderTests -->
      <class name="Navigation.NavigationTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:Navigation.NavigationTests@4567f35d]" started-at="2024-08-04T12:56:43 IST" name="setup" finished-at="2024-08-04T12:56:47 IST" duration-ms="4435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:Navigation.NavigationTests@4567f35d]" started-at="2024-08-04T12:56:47 IST" name="goHome" finished-at="2024-08-04T12:56:48 IST" duration-ms="337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testBrowserNavigations()[pri:0, instance:Navigation.NavigationTests@4567f35d]" started-at="2024-08-04T12:56:48 IST" name="testBrowserNavigations" finished-at="2024-08-04T12:56:51 IST" duration-ms="3285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBrowserNavigations -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:Navigation.NavigationTests@4567f35d]" started-at="2024-08-04T12:56:51 IST" name="recordFailure" finished-at="2024-08-04T12:56:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBrowserNavigations status=SUCCESS method=NavigationTests.testBrowserNavigations()[pri:0, instance:Navigation.NavigationTests@4567f35d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:Navigation.NavigationTests@4567f35d]" started-at="2024-08-04T12:56:51 IST" name="goHome" finished-at="2024-08-04T12:56:51 IST" duration-ms="437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSwtichingWindows()[pri:0, instance:Navigation.NavigationTests@4567f35d]" started-at="2024-08-04T12:56:51 IST" name="testSwtichingWindows" finished-at="2024-08-04T12:56:52 IST" duration-ms="953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwtichingWindows -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:Navigation.NavigationTests@4567f35d]" started-at="2024-08-04T12:56:52 IST" name="recordFailure" finished-at="2024-08-04T12:56:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSwtichingWindows status=SUCCESS method=NavigationTests.testSwtichingWindows()[pri:0, instance:Navigation.NavigationTests@4567f35d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Navigation.NavigationTests@4567f35d]" started-at="2024-08-04T12:56:52 IST" name="tearDown" finished-at="2024-08-04T12:56:53 IST" duration-ms="244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Navigation.NavigationTests -->
      <class name="alerts.AletsTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:alerts.AletsTests@8dbdac1]" started-at="2024-08-04T12:53:36 IST" name="setup" finished-at="2024-08-04T12:53:40 IST" duration-ms="4602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alerts.AletsTests@8dbdac1]" started-at="2024-08-04T12:53:40 IST" name="goHome" finished-at="2024-08-04T12:53:41 IST" duration-ms="386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testAcceptAlert()[pri:0, instance:alerts.AletsTests@8dbdac1]" started-at="2024-08-04T12:53:41 IST" name="testAcceptAlert" finished-at="2024-08-04T12:53:41 IST" duration-ms="591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAcceptAlert -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:alerts.AletsTests@8dbdac1]" started-at="2024-08-04T12:53:41 IST" name="recordFailure" finished-at="2024-08-04T12:53:41 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAcceptAlert status=SUCCESS method=AletsTests.testAcceptAlert()[pri:0, instance:alerts.AletsTests@8dbdac1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alerts.AletsTests@8dbdac1]" started-at="2024-08-04T12:53:41 IST" name="goHome" finished-at="2024-08-04T12:53:42 IST" duration-ms="941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testDismissAlert()[pri:0, instance:alerts.AletsTests@8dbdac1]" started-at="2024-08-04T12:53:42 IST" name="testDismissAlert" finished-at="2024-08-04T12:53:43 IST" duration-ms="545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDismissAlert -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:alerts.AletsTests@8dbdac1]" started-at="2024-08-04T12:53:43 IST" name="recordFailure" finished-at="2024-08-04T12:53:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDismissAlert status=SUCCESS method=AletsTests.testDismissAlert()[pri:0, instance:alerts.AletsTests@8dbdac1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alerts.AletsTests@8dbdac1]" started-at="2024-08-04T12:53:43 IST" name="goHome" finished-at="2024-08-04T12:53:43 IST" duration-ms="386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testEnterTextIntoAlert()[pri:0, instance:alerts.AletsTests@8dbdac1]" started-at="2024-08-04T12:53:43 IST" name="testEnterTextIntoAlert" finished-at="2024-08-04T12:53:44 IST" duration-ms="603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnterTextIntoAlert -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:alerts.AletsTests@8dbdac1]" started-at="2024-08-04T12:53:44 IST" name="recordFailure" finished-at="2024-08-04T12:53:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEnterTextIntoAlert status=SUCCESS method=AletsTests.testEnterTextIntoAlert()[pri:0, instance:alerts.AletsTests@8dbdac1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alerts.AletsTests@8dbdac1]" started-at="2024-08-04T12:53:44 IST" name="tearDown" finished-at="2024-08-04T12:53:44 IST" duration-ms="197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alerts.AletsTests -->
      <class name="forgotpassword.ForgotPasswordTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:forgotpassword.ForgotPasswordTests@3bb9a3ff]" started-at="2024-08-04T12:55:53 IST" name="setup" finished-at="2024-08-04T12:55:58 IST" duration-ms="4408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:forgotpassword.ForgotPasswordTests@3bb9a3ff]" started-at="2024-08-04T12:55:58 IST" name="goHome" finished-at="2024-08-04T12:55:58 IST" duration-ms="336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testForgotPassword()[pri:0, instance:forgotpassword.ForgotPasswordTests@3bb9a3ff]" started-at="2024-08-04T12:55:58 IST" name="testForgotPassword" finished-at="2024-08-04T12:56:00 IST" duration-ms="1705" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#content"}
  (Session info: chrome=127.0.6533.89)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.22.0', revision: 'c5f3146703*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [35060e17b9a817a170991a9f8c89cf17, findElement {using=id, value=content}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.89, chrome: {chromedriverVersion: 127.0.6533.88 (a2d0cb026721..., userDataDir: C:\Users\ashis\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55292}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55292/devtoo..., se:cdpVersion: 127.0.6533.89, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 35060e17b9a817a170991a9f8c89cf17]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#content"}
  (Session info: chrome=127.0.6533.89)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.22.0', revision: 'c5f3146703*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [35060e17b9a817a170991a9f8c89cf17, findElement {using=id, value=content}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.89, chrome: {chromedriverVersion: 127.0.6533.88 (a2d0cb026721..., userDataDir: C:\Users\ashis\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55292}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55292/devtoo..., se:cdpVersion: 127.0.6533.89, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 35060e17b9a817a170991a9f8c89cf17
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at pages.EmailSentPage.getConfirmationMessage(EmailSentPage.java:16)
at forgotpassword.ForgotPasswordTests.testForgotPassword(ForgotPasswordTests.java:16)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForgotPassword -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:forgotpassword.ForgotPasswordTests@3bb9a3ff]" started-at="2024-08-04T12:56:00 IST" name="recordFailure" finished-at="2024-08-04T12:56:00 IST" duration-ms="228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testForgotPassword status=FAILURE method=ForgotPasswordTests.testForgotPassword()[pri:0, instance:forgotpassword.ForgotPasswordTests@3bb9a3ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:forgotpassword.ForgotPasswordTests@3bb9a3ff]" started-at="2024-08-04T12:56:00 IST" name="tearDown" finished-at="2024-08-04T12:56:00 IST" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- forgotpassword.ForgotPasswordTests -->
      <class name="alerts.FileUploadTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:alerts.FileUploadTests@71809907]" started-at="2024-08-04T12:53:50 IST" name="setup" finished-at="2024-08-04T12:53:54 IST" duration-ms="4417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alerts.FileUploadTests@71809907]" started-at="2024-08-04T12:53:54 IST" name="goHome" finished-at="2024-08-04T12:53:55 IST" duration-ms="348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testFileUpload()[pri:0, instance:alerts.FileUploadTests@71809907]" started-at="2024-08-04T12:53:55 IST" name="testFileUpload" finished-at="2024-08-04T12:55:03 IST" duration-ms="68181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFileUpload -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alerts.FileUploadTests@71809907]" started-at="2024-08-04T12:55:03 IST" name="tearDown" finished-at="2024-08-04T12:55:04 IST" duration-ms="1404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:alerts.FileUploadTests@71809907]" started-at="2024-08-04T12:55:03 IST" name="recordFailure" finished-at="2024-08-04T12:55:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFileUpload status=SUCCESS method=FileUploadTests.testFileUpload()[pri:0, instance:alerts.FileUploadTests@71809907] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
      </class> <!-- alerts.FileUploadTests -->
      <class name="wait.DynamicLoadingTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:wait.DynamicLoadingTests@4f18837a]" started-at="2024-08-04T12:57:05 IST" name="setup" finished-at="2024-08-04T12:57:10 IST" duration-ms="4546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:wait.DynamicLoadingTests@4f18837a]" started-at="2024-08-04T12:57:10 IST" name="goHome" finished-at="2024-08-04T12:57:10 IST" duration-ms="347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testDynamicLoadingOnceElementIsVisible()[pri:0, instance:wait.DynamicLoadingTests@4f18837a]" started-at="2024-08-04T12:57:10 IST" name="testDynamicLoadingOnceElementIsVisible" finished-at="2024-08-04T12:57:17 IST" duration-ms="6710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDynamicLoadingOnceElementIsVisible -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:wait.DynamicLoadingTests@4f18837a]" started-at="2024-08-04T12:57:17 IST" name="recordFailure" finished-at="2024-08-04T12:57:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDynamicLoadingOnceElementIsVisible status=SUCCESS method=DynamicLoadingTests.testDynamicLoadingOnceElementIsVisible()[pri:0, instance:wait.DynamicLoadingTests@4f18837a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:wait.DynamicLoadingTests@4f18837a]" started-at="2024-08-04T12:57:17 IST" name="goHome" finished-at="2024-08-04T12:57:17 IST" duration-ms="340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testDynamicLoadingWait()[pri:0, instance:wait.DynamicLoadingTests@4f18837a]" started-at="2024-08-04T12:57:17 IST" name="testDynamicLoadingWait" finished-at="2024-08-04T12:57:23 IST" duration-ms="6142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDynamicLoadingWait -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:wait.DynamicLoadingTests@4f18837a]" started-at="2024-08-04T12:57:23 IST" name="recordFailure" finished-at="2024-08-04T12:57:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDynamicLoadingWait status=SUCCESS method=DynamicLoadingTests.testDynamicLoadingWait()[pri:0, instance:wait.DynamicLoadingTests@4f18837a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:wait.DynamicLoadingTests@4f18837a]" started-at="2024-08-04T12:57:23 IST" name="tearDown" finished-at="2024-08-04T12:57:25 IST" duration-ms="1767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- wait.DynamicLoadingTests -->
      <class name="hovers.HoversTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:hovers.HoversTests@323b36e0]" started-at="2024-08-04T12:56:15 IST" name="setup" finished-at="2024-08-04T12:56:20 IST" duration-ms="4425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:hovers.HoversTests@323b36e0]" started-at="2024-08-04T12:56:20 IST" name="goHome" finished-at="2024-08-04T12:56:20 IST" duration-ms="320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testHoverUser1()[pri:0, instance:hovers.HoversTests@323b36e0]" started-at="2024-08-04T12:56:20 IST" name="testHoverUser1" finished-at="2024-08-04T12:56:21 IST" duration-ms="936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHoverUser1 -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:hovers.HoversTests@323b36e0]" started-at="2024-08-04T12:56:21 IST" name="recordFailure" finished-at="2024-08-04T12:56:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHoverUser1 status=SUCCESS method=HoversTests.testHoverUser1()[pri:0, instance:hovers.HoversTests@323b36e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:hovers.HoversTests@323b36e0]" started-at="2024-08-04T12:56:21 IST" name="tearDown" finished-at="2024-08-04T12:56:21 IST" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- hovers.HoversTests -->
      <class name="JavaScript.JavaScriptTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:JavaScript.JavaScriptTests@44ebcd03]" started-at="2024-08-04T12:56:21 IST" name="setup" finished-at="2024-08-04T12:56:26 IST" duration-ms="4504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:JavaScript.JavaScriptTests@44ebcd03]" started-at="2024-08-04T12:56:26 IST" name="goHome" finished-at="2024-08-04T12:56:26 IST" duration-ms="400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testParagraphScrolls()[pri:0, instance:JavaScript.JavaScriptTests@44ebcd03]" started-at="2024-08-04T12:56:26 IST" name="testParagraphScrolls" finished-at="2024-08-04T12:56:28 IST" duration-ms="1986" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParagraphScrolls -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:JavaScript.JavaScriptTests@44ebcd03]" started-at="2024-08-04T12:56:28 IST" name="recordFailure" finished-at="2024-08-04T12:56:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testParagraphScrolls status=SUCCESS method=JavaScriptTests.testParagraphScrolls()[pri:0, instance:JavaScript.JavaScriptTests@44ebcd03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:JavaScript.JavaScriptTests@44ebcd03]" started-at="2024-08-04T12:56:28 IST" name="goHome" finished-at="2024-08-04T12:56:29 IST" duration-ms="624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testScrollToTable()[pri:0, instance:JavaScript.JavaScriptTests@44ebcd03]" started-at="2024-08-04T12:56:29 IST" name="testScrollToTable" finished-at="2024-08-04T12:56:29 IST" duration-ms="760" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollToTable -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:JavaScript.JavaScriptTests@44ebcd03]" started-at="2024-08-04T12:56:29 IST" name="recordFailure" finished-at="2024-08-04T12:56:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScrollToTable status=SUCCESS method=JavaScriptTests.testScrollToTable()[pri:0, instance:JavaScript.JavaScriptTests@44ebcd03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:JavaScript.JavaScriptTests@44ebcd03]" started-at="2024-08-04T12:56:29 IST" name="tearDown" finished-at="2024-08-04T12:56:30 IST" duration-ms="196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- JavaScript.JavaScriptTests -->
      <class name="checkboxes.CheckboxesTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:checkboxes.CheckboxesTests@158da8e]" started-at="2024-08-04T12:55:15 IST" name="setup" finished-at="2024-08-04T12:55:19 IST" duration-ms="3981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:checkboxes.CheckboxesTests@158da8e]" started-at="2024-08-04T12:55:19 IST" name="goHome" finished-at="2024-08-04T12:55:19 IST" duration-ms="356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testClickingCheckboxes()[pri:0, instance:checkboxes.CheckboxesTests@158da8e]" started-at="2024-08-04T12:55:19 IST" name="testClickingCheckboxes" finished-at="2024-08-04T12:55:20 IST" duration-ms="619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickingCheckboxes -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:checkboxes.CheckboxesTests@158da8e]" started-at="2024-08-04T12:55:20 IST" name="recordFailure" finished-at="2024-08-04T12:55:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickingCheckboxes status=SUCCESS method=CheckboxesTests.testClickingCheckboxes()[pri:0, instance:checkboxes.CheckboxesTests@158da8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:checkboxes.CheckboxesTests@158da8e]" started-at="2024-08-04T12:55:20 IST" name="goHome" finished-at="2024-08-04T12:55:20 IST" duration-ms="390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testCurrentCheckboxesState()[pri:0, instance:checkboxes.CheckboxesTests@158da8e]" started-at="2024-08-04T12:55:20 IST" name="testCurrentCheckboxesState" finished-at="2024-08-04T12:55:21 IST" duration-ms="1046" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCurrentCheckboxesState -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:checkboxes.CheckboxesTests@158da8e]" started-at="2024-08-04T12:55:21 IST" name="recordFailure" finished-at="2024-08-04T12:55:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCurrentCheckboxesState status=SUCCESS method=CheckboxesTests.testCurrentCheckboxesState()[pri:0, instance:checkboxes.CheckboxesTests@158da8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:checkboxes.CheckboxesTests@158da8e]" started-at="2024-08-04T12:55:21 IST" name="tearDown" finished-at="2024-08-04T12:55:22 IST" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- checkboxes.CheckboxesTests -->
      <class name="disappearingElements.DisappearingElementsTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:disappearingElements.DisappearingElementsTests@74e52303]" started-at="2024-08-04T12:55:22 IST" name="setup" finished-at="2024-08-04T12:55:26 IST" duration-ms="4292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:disappearingElements.DisappearingElementsTests@74e52303]" started-at="2024-08-04T12:55:26 IST" name="goHome" finished-at="2024-08-04T12:55:26 IST" duration-ms="393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testDisappearingAndReappearingElements()[pri:0, instance:disappearingElements.DisappearingElementsTests@74e52303]" started-at="2024-08-04T12:55:26 IST" name="testDisappearingAndReappearingElements" finished-at="2024-08-04T12:55:38 IST" duration-ms="11796" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to no longer be visible: By.cssSelector: a[href='/gallery/'] (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.22.0', revision: 'c5f3146703*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.89, chrome: {chromedriverVersion: 127.0.6533.88 (a2d0cb026721..., userDataDir: C:\Users\ashis\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55213}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55213/devtoo..., se:cdpVersion: 127.0.6533.89, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4b7d0444e5f9f4b4f8882f6a1d096d01]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to no longer be visible: By.cssSelector: a[href='/gallery/'] (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.22.0', revision: 'c5f3146703*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 127.0.6533.89, chrome: {chromedriverVersion: 127.0.6533.88 (a2d0cb026721..., userDataDir: C:\Users\ashis\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55213}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55213/devtoo..., se:cdpVersion: 127.0.6533.89, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4b7d0444e5f9f4b4f8882f6a1d096d01
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at pages.DisappearingElementsPage.waitForGalleryElementToDisappear(DisappearingElementsPage.java:38)
at disappearingElements.DisappearingElementsTests.testDisappearingAndReappearingElements(DisappearingElementsTests.java:16)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDisappearingAndReappearingElements -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:disappearingElements.DisappearingElementsTests@74e52303]" started-at="2024-08-04T12:55:38 IST" name="recordFailure" finished-at="2024-08-04T12:55:38 IST" duration-ms="162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDisappearingAndReappearingElements status=FAILURE method=DisappearingElementsTests.testDisappearingAndReappearingElements()[pri:0, instance:disappearingElements.DisappearingElementsTests@74e52303] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:disappearingElements.DisappearingElementsTests@74e52303]" started-at="2024-08-04T12:55:38 IST" name="tearDown" finished-at="2024-08-04T12:55:40 IST" duration-ms="1806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- disappearingElements.DisappearingElementsTests -->
      <class name="addremoveelement.AddRemoveElementTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:addremoveelement.AddRemoveElementTests@7fa98a66]" started-at="2024-08-04T12:53:29 IST" name="setup" finished-at="2024-08-04T12:53:35 IST" duration-ms="5470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:addremoveelement.AddRemoveElementTests@7fa98a66]" started-at="2024-08-04T12:53:35 IST" name="goHome" finished-at="2024-08-04T12:53:35 IST" duration-ms="361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testAddingRemovingElements()[pri:0, instance:addremoveelement.AddRemoveElementTests@7fa98a66]" started-at="2024-08-04T12:53:35 IST" name="testAddingRemovingElements" finished-at="2024-08-04T12:53:36 IST" duration-ms="668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddingRemovingElements -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:addremoveelement.AddRemoveElementTests@7fa98a66]" started-at="2024-08-04T12:53:36 IST" name="recordFailure" finished-at="2024-08-04T12:53:36 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddingRemovingElements status=SUCCESS method=AddRemoveElementTests.testAddingRemovingElements()[pri:0, instance:addremoveelement.AddRemoveElementTests@7fa98a66] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:addremoveelement.AddRemoveElementTests@7fa98a66]" started-at="2024-08-04T12:53:36 IST" name="tearDown" finished-at="2024-08-04T12:53:36 IST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- addremoveelement.AddRemoveElementTests -->
      <class name="alerts.ContextMenuTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:alerts.ContextMenuTests@6e20b53a]" started-at="2024-08-04T12:53:44 IST" name="setup" finished-at="2024-08-04T12:53:49 IST" duration-ms="4507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alerts.ContextMenuTests@6e20b53a]" started-at="2024-08-04T12:53:49 IST" name="goHome" finished-at="2024-08-04T12:53:49 IST" duration-ms="356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testContextMenuClick()[pri:0, instance:alerts.ContextMenuTests@6e20b53a]" started-at="2024-08-04T12:53:49 IST" name="testContextMenuClick" finished-at="2024-08-04T12:53:50 IST" duration-ms="737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContextMenuClick -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:alerts.ContextMenuTests@6e20b53a]" started-at="2024-08-04T12:53:50 IST" name="recordFailure" finished-at="2024-08-04T12:53:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testContextMenuClick status=SUCCESS method=ContextMenuTests.testContextMenuClick()[pri:0, instance:alerts.ContextMenuTests@6e20b53a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alerts.ContextMenuTests@6e20b53a]" started-at="2024-08-04T12:53:50 IST" name="tearDown" finished-at="2024-08-04T12:53:50 IST" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alerts.ContextMenuTests -->
      <class name="Navigation.WindowTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:Navigation.WindowTests@5ffead27]" started-at="2024-08-04T12:56:53 IST" name="setup" finished-at="2024-08-04T12:56:57 IST" duration-ms="4410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:Navigation.WindowTests@5ffead27]" started-at="2024-08-04T12:56:57 IST" name="goHome" finished-at="2024-08-04T12:56:57 IST" duration-ms="363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testWindowTabs()[pri:0, instance:Navigation.WindowTests@5ffead27]" started-at="2024-08-04T12:56:57 IST" name="testWindowTabs" finished-at="2024-08-04T12:56:59 IST" duration-ms="1539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWindowTabs -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:Navigation.WindowTests@5ffead27]" started-at="2024-08-04T12:56:59 IST" name="recordFailure" finished-at="2024-08-04T12:56:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWindowTabs status=SUCCESS method=WindowTests.testWindowTabs()[pri:0, instance:Navigation.WindowTests@5ffead27] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Navigation.WindowTests@5ffead27]" started-at="2024-08-04T12:56:59 IST" name="tearDown" finished-at="2024-08-04T12:56:59 IST" duration-ms="187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Navigation.WindowTests -->
      <class name="keys.KeysTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:keys.KeysTests@694abbdc]" started-at="2024-08-04T12:56:30 IST" name="setup" finished-at="2024-08-04T12:56:34 IST" duration-ms="4293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:keys.KeysTests@694abbdc]" started-at="2024-08-04T12:56:34 IST" name="goHome" finished-at="2024-08-04T12:56:34 IST" duration-ms="341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testBackspace()[pri:0, instance:keys.KeysTests@694abbdc]" started-at="2024-08-04T12:56:34 IST" name="testBackspace" finished-at="2024-08-04T12:56:35 IST" duration-ms="618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBackspace -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:keys.KeysTests@694abbdc]" started-at="2024-08-04T12:56:35 IST" name="recordFailure" finished-at="2024-08-04T12:56:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBackspace status=SUCCESS method=KeysTests.testBackspace()[pri:0, instance:keys.KeysTests@694abbdc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:keys.KeysTests@694abbdc]" started-at="2024-08-04T12:56:35 IST" name="goHome" finished-at="2024-08-04T12:56:35 IST" duration-ms="350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testPi()[pri:0, instance:keys.KeysTests@694abbdc]" started-at="2024-08-04T12:56:35 IST" name="testPi" finished-at="2024-08-04T12:56:36 IST" duration-ms="517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPi -->
        <test-method is-config="true" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:keys.KeysTests@694abbdc]" started-at="2024-08-04T12:56:36 IST" name="recordFailure" finished-at="2024-08-04T12:56:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPi status=SUCCESS method=KeysTests.testPi()[pri:0, instance:keys.KeysTests@694abbdc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:keys.KeysTests@694abbdc]" started-at="2024-08-04T12:56:36 IST" name="tearDown" finished-at="2024-08-04T12:56:36 IST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- keys.KeysTests -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
